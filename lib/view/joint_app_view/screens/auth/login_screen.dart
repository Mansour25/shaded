import 'package:flutter/material.dart';import 'package:get/get.dart';import 'package:shaded/controller/joint_app_controller/auth/login_controller.dart';import 'package:shaded/core/app_services/app_color.dart';import 'package:shaded/core/functions/public_widgets/custom_text.dart';import 'package:shaded/core/functions/public_widgets/spaces.dart';import 'package:shaded/core/size_config/size_config.dart';class LoginScreen extends StatelessWidget {  const LoginScreen({super.key});  @override  Widget build(BuildContext context) {    Get.lazyPut(() => LoginController());    return GetBuilder<LoginController>(builder: (logic) {      return Directionality(          textDirection: TextDirection.rtl,          child: Scaffold(            body: SafeArea(                child: Form(              key: logic.formLoginKey,              child: Center(                child: Column(                  mainAxisAlignment: MainAxisAlignment.center,                  crossAxisAlignment: CrossAxisAlignment.start,                  mainAxisSize: MainAxisSize.min,                  children: [                    Padding(                      padding: const EdgeInsets.only(right: 18.0),                      child: CustomText(                        ' ŸÖÿ±ÿ≠ÿ®ÿßŸã ÿ®ŸÉ üëã',                        (18),                        const Color(0xFF000000),                      ),                    ),                    const SizedBox(                      height: 39,                    ),                    Padding(                      padding: const EdgeInsets.only(right: 34.0),                      child: CustomText(                        ' ÿ£ÿØÿÆŸÑ ÿ±ŸÇŸÖ ÿßŸÑŸáÿßÿ™ŸÅ ŸÑŸÑÿ™ÿ≠ŸÇŸÇ',                        (14),                        const Color(0xFF686868),                        fontWeight: FontWeight.w600,                      ),                    ),                    const SizedBox(height: 14),                    Padding(                      padding: const EdgeInsets.symmetric(horizontal: 25.0),                      child: Directionality(                        textDirection: TextDirection.ltr,                        child: TextFormField(                          controller: logic.phoneLoginController,                          keyboardType: TextInputType.phone,                          onChanged: (value) {                            if (logic.formLoginKey.currentState!.validate()){                              logic.onChange_textPhone();                            };                          },                          validator: (value) {                            if (value!.isEmpty) {                              print("Empty");                              return 'ÿ®ÿ±ÿ¨ÿßÿ° ÿ£ÿØÿÆŸÑ ÿ±ŸÇŸÖ ÿßŸÑŸáÿßÿ™ŸÅ';                            } else if (value.length != 9 ||                                !value.isPhoneNumber) {                              print(value.length);                              return 'ÿßŸÑÿ±ŸÇŸÖ ÿ∫Ÿäÿ± ÿµÿ≠Ÿäÿ≠';                            }                            return null;                          },                          decoration: InputDecoration(                            prefix: const Text('+966  '),                            border: OutlineInputBorder(                              borderRadius: BorderRadius.circular(14.0),                              borderSide: const BorderSide(),                            ),                          ),                        ),                      ),                    ),                    const SizedBox(height: 39),                    Padding(                      padding: const EdgeInsets.only(right: 18.0),                      child: Row(                        children: [                          Radio(                            value: true,                            groupValue: logic.isUserType ?? false,                            fillColor: MaterialStateProperty.all<Color>(                                AppColor.appColor),                            onChanged: (value) {                              logic.changing_radio();                              logic.onChange_textPhone();                            },                          ),                          CustomText(                            'ŸÖÿ≥ÿ™ÿÆÿØŸÖ',                            (14),                            (logic.isUserType == false)                                ? const Color(0xFF808080)                                : Color(0xFF242424),                          ),                          const SizedBox(                            width: 20.0,                          ),                          Radio(                            value: false,                            groupValue: logic.isUserType ?? false,                            fillColor: MaterialStateProperty.all<Color>(                                AppColor.appColor),                            onChanged: (value) {                              logic.changing_radio();                              logic.onChange_textPhone();                            },                          ),                          CustomText(                            'ŸÉÿßÿ®ÿ™ŸÜ',                            (14),                            (logic.isUserType == true)                                ? const Color(0xFF808080)                                : const Color(0xFF242424),                          ),                        ],                      ),                    ),                    spaceH(77),                    Center(                      child: (logic.access_send_verify)                          ? logic.isLoading                              ? const Center(                                  child: CircularProgressIndicator(),                                )                              : buildButton(                                  color: AppColor.appColor,                                  colorName: Colors.white,                                  name: "ÿ£ÿ±ÿ≥ŸÑ ŸÉŸàÿØ ÿßŸÑÿ™ÿ≠ŸÇŸÇ",                                  function: () async {                                    if (logic.formLoginKey.currentState!                                        .validate()) {                                      logic.login(context);                                    }                                  })                          : buildButton(                              color: Colors.grey,                              colorName: Colors.white,                              name: "ÿ£ÿ±ÿ≥ŸÑ ŸÉŸàÿØ ÿßŸÑÿ™ÿ≠ŸÇŸÇ",                            ),                    ),                  ],                ),              ),            )),          ));    });  }}Widget buildButton({  String? name,  Color? color,  Color? colorName,  double? width,  double? hight,  VoidCallback? function,}) =>    Container(      decoration: BoxDecoration(        color: color,        borderRadius: BorderRadius.circular(15),      ),      width: SizeConfig.scaleWidth(327),      height: SizeConfig.scaleHeight(50),      child: MaterialButton(        elevation: 0,        onPressed: function ?? () {},        shape:            RoundedRectangleBorder(borderRadius: BorderRadius.circular(14.0)),        child: CustomText(          name!,          16,          Colors.white,        ),      ),    );