import 'dart:math';import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:get/get.dart';import 'package:shaded/core/api_services/status_request.dart';import 'package:shaded/core/app_services/app_color.dart';import 'package:shaded/core/data/remote_data/auth/login_data.dart';import 'package:shaded/core/functions/public_widgets/custom_text.dart';import 'package:shaded/view/joint_app_view/screens/auth/otp_screen.dart';class LoginController extends GetxController {  final formLoginKey = GlobalKey<FormState>();  bool isLoading = false;  bool? isUserType = true;  TextEditingController phoneLoginController = TextEditingController();  onChange_textPhone() {    if (phoneLoginController.text.length == 9 &&        isUserType != null &&        formLoginKey.currentState!.validate()) {      access_send_verify = true;    } else {      access_send_verify = false;    }    update();  }  changing_radio() {    if (isUserType == true) {      isUserType = false;    } else {      isUserType = true;    }    update();  }  bool access_send_verify = false;  LoginData loginData = LoginData();  void login(context) async {    isLoading = true;    update();    await loginData        .login(      mobile: phoneLoginController.text,      fcmToken: 'vbjnmkkknjbhvghgbhmlknjbhvgcfyguh',      deviceType: 'android',      userType: '1',    )        .then((value) {      print(value);      if (value == StatusRequest.serverFailure) {        snakBar(context, 'لم يتم ارسال كود التحقق بنجاح');      } else if (value == StatusRequest.failure) {        snakBar(context, 'خطأ غير معروف');      } else if (value == StatusRequest.offlineFailure) {        snakBar(context, 'لا يوجد اتصال بالانترنت');      } else {        snakBar(context, 'تم إرسال الكود');        Navigator.pushReplacement(context, MaterialPageRoute(          builder: (context) {            return OtpPage();          },        ));      }    });    isLoading = false;    update();  }}snakBar(context, txt) {  return ScaffoldMessenger.of(context).showSnackBar(    SnackBar(      content: CustomText(txt, 12, Colors.white),    ),  );}